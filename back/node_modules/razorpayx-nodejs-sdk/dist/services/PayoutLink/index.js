"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
class RPXPayoutLink {
    constructor(client) {
        this.client = client;
    }
    /**
     * Creates a payout link for the given details
     * @link https://razorpay.com/docs/api/x/payout-links#create-a-payout-link
     */
    create(payoutLinkInfo) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.load("/payout-links", "POST", payoutLinkInfo);
        });
    }
    /**
     * Fetches all payout links
     * @link https://razorpay.com/docs/api/x/payout-links#fetch-all-payout-links
     */
    getAll(filter = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.load("/payout-links", "GET", filter);
        });
    }
    /**
     * Fetch details of a payout link
     * @link https://razorpay.com/docs/api/x/payout-links#fetch-payout-link-by
     */
    get(payoutLinkId) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.load(`/payout-links/${payoutLinkId}`);
        });
    }
    /**
     * Cancels the payout link for given payoutLinkId
     * @link https://razorpay.com/docs/api/x/payout-links#cancel-a-payout-link
     */
    cancel(payoutLinkId) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.load(`/payout-links//${payoutLinkId}/cancel`, "POST");
        });
    }
}
exports.default = RPXPayoutLink;

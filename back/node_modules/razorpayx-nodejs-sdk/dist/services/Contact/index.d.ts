import { GenericFields, Pageable, Response } from "../../types/generic";
import RestClient from "../../utils/RestClient";
export interface Contact extends Omit<GenericFields, "entity"> {
    entity: "contact";
    name: string;
    email?: string;
    contact?: string;
    type?: "vendor" | "customer" | "employee" | "self";
    reference_id?: string;
    notes?: Record<string, string>;
}
declare class RPXContact {
    client: RestClient;
    constructor(client: RestClient);
    /**
     * Creates a contact for the account
     * @link https://razorpay.com/docs/api/x/contacts#create-a-contact
     */
    create(contactInfo: Omit<Contact, "id" | "entity" | "batch_id" | "created_at" | "active">): Promise<Contact>;
    /**
     * updates a contact for the account
     * @link https://razorpay.com/docs/api/x/contacts#update-a-contact
     */
    update(contactId: Contact["id"], contactInfo: Omit<Contact, "id" | "entity" | "batch_id" | "created_at" | "active">): Promise<void>;
    /**
     * Fetches all contacts the account
     * @link https://razorpay.com/docs/api/x/contacts#fetch-all-contacts
     */
    getAll(filters?: Pageable & Partial<Pick<Contact, "name" | "email" | "contact" | "reference_id" | "active" | "type">>): Promise<Response<Contact>>;
    /**
     * Fetches details of a contact
     * @link https://razorpay.com/docs/api/x/contacts#fetch-a-contact-by-id
     */
    get(contactId: Contact["id"]): Promise<Contact>;
    /**
     * Activates a contact
     * @link https://razorpay.com/docs/api/x/contacts#activate-or-deactivate-a-contact
     */
    activate(contactId: Contact["id"]): Promise<void>;
    /**
     * Deactivates a contact
     * @link https://razorpay.com/docs/api/x/contacts#activate-or-deactivate-a-contact
     */
    deactivate(contactId: Contact["id"]): Promise<void>;
}
export default RPXContact;
